[package]
name = "webauthn-contract"
description = "cargo-near-new-project-description"
version = "0.1.0"
edition = "2021"
# TODO: Fill out the repository field to help NEAR ecosystem tools to discover your project.
# NEP-0330 is automatically implemented for all contracts built with https://github.com/near/cargo-near.
# Link to the repository will be available via `contract_source_metadata` view-function.
repository = "https://github.com/peitalin/reveries-passkey"

[lib]
crate-type = ["cdylib", "rlib"]

# fields to configure build with WASM reproducibility, according to specs
# in https://github.com/near/NEPs/blob/master/neps/nep-0330.md
[package.metadata.near.reproducible_build]
# docker image, descriptor of build environment
image = "sourcescan/cargo-near:0.14.1-rust-1.86.0"
# tag after colon above serves only descriptive purpose; image is identified by digest
image_digest = "sha256:eaac91be3119cc7c136b6f375f2d3e092001f717ed6151ccc9d5348c2d6a640c"
# list of environment variables names, whose values, if set, will be used as external build parameters
# in a reproducible manner
# supported by `sourcescan/cargo-near:0.10.1-rust-1.82.0` image or later images
passed_env = []
# build command inside of docker container
# if docker image from default gallery is used https://hub.docker.com/r/sourcescan/cargo-near/tags,
# the command may be any combination of flags of `cargo-near`,
# supported by respective version of binary inside the container besides `--no-locked` flag
container_build_command = [
    "cargo",
    "near",
    "build",
    "non-reproducible-wasm",
    "--locked",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
near-sdk = { version = "=5.13.0"}
base64 = "0.21.0"
serde_cbor = "0.11.2"
serde_json = "1.0"
p256 = { version = "0.13", default-features = false, features = ["ecdsa", "arithmetic"] }
elliptic-curve = { version = "0.13.2", features = ["hash2curve"] }
ecdsa = { version = "0.16", default-features = false, features = ["verifying"] }
ed25519-dalek = { version = "2.1", default-features = false, features = ["rand_core"] }
sha2 = { version = "0.10", default-features = false }
bincode = "1.3.3"
x509-parser = "0.17.0"

# VRF with WASM support (based on fastcrypto)
# with curve25519-dalek-ng with default-features=false, using "u32_backend"
# and using NEAR based RNG for contract compatibility
vrf-wasm = { version = "0.8", features = ["near"], default-features = false }
vrf-contract-verifier = { version = "0.8", features = ["near"], default-features = false }


[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
# Dev dependencies for native testing environment only.
# These will NOT be included in the wasm32 contract build.
near-sdk = { version = "=5.13.0", features = ["unit-testing"] }
near-workspaces = { version = "0.18", features = ["unstable", "experimental"] }
near-jsonrpc-primitives = { version = "0.29.2" }
near-primitives = { version = "0.29.2", features = [] }
tokio = { version = "1.12.0", features = ["full"] }
serde_json = "1"
rand_core = "0.6"
rand_chacha = "0.3"
sha2 = "0.10"
bs58 = "0.5"
# VRF generation for testing, uses getrandom lib for browser WASM compatibility
# (this library is not included in contract binary,
# vrf-wasm in the contract is compiled with 'near' feature flag)
vrf-wasm = { version = "0.8", features = ["browser"] }

